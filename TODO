- lighting.c uitwerken
- input bonus parsing (ook opvangen wat er gebeurt als scene bonus niet specificeert)
- refactor RayTrace
- plane toevoegen
- ray_trace.c opschonen
- cylinder toevoegen
- i_.c refactor
- tests schrijven

float Cylinder::intersect(Vector pos, Vector dir)
{
    float a = (dir.x * dir.x) + (dir.z * dir.z);
    float b = 2*(dir.x*(pos.x-center.x) + dir.z*(pos.z-center.z));
    float c = (pos.x - center.x) * (pos.x - center.x) + (pos.z - center.z) * (pos.z - center.z) - (radius*radius);

    float delta = b*b - 4*(a*c);
	if(fabs(delta) < 0.001) return -1.0;
    if(delta < 0.0) return -1.0;

    float t1 = (-b - sqrt(delta))/(2*a);
    float t2 = (-b + sqrt(delta))/(2*a);
    float t;

    if (t1>t2) t = t2;
    else t = t1;

    float r = pos.y + t*dir.y;

    if ((r >= center.y) and (r <= center.y + height))return t;
    else return -1;
}




Intersection
Cylinder: continued
• obtaining [ t1, t2 ]
– The equation of the infinite height cylinder :
– x2 + y 2 = r 2
– Substituting the ray equation in this equation we obtain:
t2 . ( dx 2 + dy2 ) + 2t . (Xo . dx + Yo . dy ) + ( Xo 2 + Yo 2 - r2 ) = 0

		a						b							c